---
name: Code Checks
permissions:
  id-token: write
  contents: read
  pull-requests: write
  statuses: write
  checks: write
  security-events: write
  issues: write

on:
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash
    working-directory: terraform

concurrency:
  group: workflow-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linter_checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Lint Code Base
        uses: super-linter/super-linter@v7.3.0
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JSCPD: false
          VALIDATE_CHECKOV: false

  terraformplan:
    strategy:
      matrix:
        environment:
          - development
    runs-on: ubuntu-latest
    environment:
      name: ${{ matrix.environment }}
    steps:
      - name: install terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: 3.x # Use any supported Python version

      - name: AWS login
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MAIN_AWS_ACCOUNT_ID }}:role/${{ secrets.MAIN_AWS_ROLE }}
          role-session-name: ${{ github.sha }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Terraform init
        env:
          TF_VAR_AWS_ACCOUNT_ID: ${{ secrets.DEPLOY_AWS_ACCOUNT_ID }}
          TF_VAR_AWS_ROLE_NAME: ${{ secrets.DEPLOY_AWS_ROLE }}
        shell: sh
        run: |
          terraform init -input=false -no-color -upgrade -reconfigure -backend-config=config/${{ matrix.environment }}/backend.conf -var-file=config/${{ matrix.environment }}/terraform.tfvars
        working-directory: terraform

      - name: Terraform Validate
        if: github.event_name == 'pull_request'
        shell: sh
        run: |
          terraform validate -no-color
        continue-on-error: true
        working-directory: terraform

      - name: Terraform Plan/Show
        if: github.event_name == 'pull_request'
        id: terraform_plan
        shell: sh
        run: |
          terraform plan -refresh=true -out=plan.out -var-file=config/${{ matrix.environment }}/terraform.tfvars
          terraform show -json plan.out | jq . > plan.json
        env:
          TF_VAR_aws_account_id: ${{ secrets.DEPLOY_AWS_ACCOUNT_ID }}
          TF_VAR_aws_role_name: ${{ secrets.DEPLOY_AWS_ROLE }}
        working-directory: terraform

      - name: Run Terrascan
        id: terrascan
        uses: tenable/terrascan-action@main
        with:
          iac_type: "terraform"
          iac_version: "v14"
          policy_type: "aws"
          only_warn: true

      - name: Checkov
        id: checkov
        uses: ghostfacts/checkov@main
        with:
          planfilename: plan.json
          path: terraform
          githubapi: ${{ secrets.GITHUB_TOKEN }}

      # - name: Post Terraform Output to PR
      #   uses: marocchino/sticky-pull-request-comment@v2
      #   with:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     header: Terraform Output
      #     message: |
      #       ```hcl
      #       ${{ steps.terraform_plan.outputs.stdout }}
      #       ```
