---
name: Terraform Plan
permissions:
  id-token: write
  contents: read
  pull-requests: write
  statuses: write
  checks: write
  security-events: write
  issues: write
  

on:
  pull_request:
    branches:
      - main
    # paths:
    #   - terraform/**

jobs:
  terraformplan:
    strategy:
      matrix:
        environment:
          - development
    runs-on: ubuntu-latest
    steps:
      - name: install terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: AWS login
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/${{ secrets.AWS_ROLE }}
          role-session-name: ${{ github.sha }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Terraform init
        shell: sh
        run: |
          terraform init -input=false -no-color -upgrade -reconfigure -backend-config=config/${{ matrix.environment }}/backend.conf -var-file=config/${{ matrix.environment }}/terraform.tfvars
        working-directory: terraform
      
      - name: Terraform Validate
        if: github.event_name == 'pull_request'
        shell: sh
        run : |
          terraform validate -no-color
        continue-on-error: true
        working-directory: terraform

      - name: Terraform Plan/Show
        if: github.event_name == 'pull_request'
        shell: sh
        run : |
          terraform plan -refresh=true -out=plan.out -var-file=config/${{ matrix.environment }}/terraform.tfvars
          terraform show -json plan.out | jq . > plan.json
        working-directory: terraform
  
  terraformdeploy:
    needs: terraformplan
    runs-on: ubuntu-latest
    steps:
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: members,forstnd,forstops
          minimum-approvals: 1

      - name: Deploy to production
        run: echo deploying