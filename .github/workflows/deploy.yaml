---
name: Terraform Deploy
permissions:
  id-token: write
  contents: read
  pull-requests: write
  statuses: write
  checks: write
  security-events: write
  issues: write


on:
  push:
    branches:
      - main

jobs:
  terraformdeploy:
    strategy:
      matrix:
        environment:
          - development
    runs-on: ubuntu-latest
    environment:
      name: ${{ matrix.environment }}
    steps:
      - name: AWS login
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MAIN_AWS_ACCOUNT_ID }}:role/${{ secrets.MAIN_AWS_ROLE }}
          role-session-name: ${{ github.sha }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: install terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"  # Use any supported Python version


      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform init
        shell: sh
        env:
          TF_VAR_aws_account_id: ${{ secrets.DEPLOY_AWS_ACCOUNT_ID }}
          TF_VAR_aws_role_name: ${{ secrets.DEPLOY_AWS_ROLE }}
        run: |
          terraform init -input=false -no-color -upgrade -reconfigure -backend-config=config/${{ matrix.environment }}/backend.conf -var-file=config/${{ matrix.environment }}/terraform.tfvars
        working-directory: terraform

      - name: Terraform apply
        shell: sh
        env:
          TF_VAR_aws_account_id: ${{ secrets.DEPLOY_AWS_ACCOUNT_ID }}
          TF_VAR_aws_role_name: ${{ secrets.DEPLOY_AWS_ROLE }}
        run : |
          terraform apply -var-file=config/${{ matrix.environment }}/terraform.tfvars --auto-approve
        working-directory: terraform

  branchcleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get current branch name
        id: get_branch
        run: echo "branch_name=$(echo $GITHUB_REF | sed 's|refs/heads/||')" >> $GITHUB_ENV

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Delete current branch
        if: ${{ env.branch_name != 'main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ env.branch_name }}
        run: |
          echo "Deleting branch $BRANCH_NAME"
          git push origin --delete $BRANCH_NAME

